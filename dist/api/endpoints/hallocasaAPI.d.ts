/**
 * Generated by orval v7.9.0 🍺
 * Do not edit manually.
 * Hallocasa API
 * Hallocasa API Documentation
 * OpenAPI spec version: v1
 */
import type { Alert, Attachment, AuthInfoDto, AutopilotUser, BaseFilterResult, Brokerage, ChangePublicationStatus2Body, ChatAllowance, ChatTicket, CheckoutSessionDto, Contract, Country, CountryPhonePrefix, Currency, CustomerSessionDto, ExchangeRateMap, FBPropertyDto, Favorite, FetchPublishedTestimonials1Params, FetchReceivedTestimonials1Params, Find1Params, FindArchivedGroupsByUser1Params, FindGroupsByUser1Params, FindInactiveGroupsByUser1Params, FindInvitedGroupsByUser1Params, FindPropertiesByUser1Params, FindProperty1Params, FindRequestedGroupsByUser1Params, FindTestimonialsByUser1Params, GeoPlace, GetAlertResult1200, GetAll1Params, GetByUserParams, GetByUserWithResult1Params, GetChatSummaryByUser1Params, GetConversation1Params, GetGeoLocationsByLatLng1Params, GetGroupMembers1Params, GetLanguages1200, GetLanguages1Params, GetPropertyFieldOptions1200, GetPropertyFiltersParams, GetRecentProperties1Params, Group, GroupInviteParams, GroupMember, Language, LocaleSet, LogEntry, Message, NewsletterSubscriberDto, Notification, NotifyUploadRequest, PasswordRecoveryRequest, PhoneCodeCheckResource, PhoneCodeRequestResource, PreviewProperty2Params, PreviewPropertyParams, Property, PropertyFilter, PropertyFilterCriteria, PropertyFilterResult, PropertyFilterSubmission, PropertyKey, PropertyLocation, PropertyProposal, PropertyType, Register1Params, RequestActivationLink1Body, RequestToken1Body, RetrieveChatUserStatus1200, RetrieveEndorsementsByUser1Params, Skill, SkillEndorsement, SkilledUser, StripeEvent, SubscribedUser, SubscriptionPlanFeatureDto, Testimonial, TestimonialFilterResult, TestimonialRequest, TextTranslation, TranslateText1Params, UpdateGroupMembershipStatus1Params, UploadKyeroPropertiesParams, User, UserChatsSummary, UserFilterRequest, UserFilterResult, UserListRequest, UserSkill, UserSubscriptionDto, UserType, WeeklyAlertRange, XmlUrl } from "../model";
export declare const getHallocasaAPI: () => {
    createAttachment1: (attachment: Attachment) => Promise<Attachment>;
    retrieveAttachment1: (fileId: string) => Promise<Attachment>;
    updateAttachment1: (fileId: string, notifyUploadRequest: NotifyUploadRequest) => Promise<unknown>;
    getChatAllowance1: (userPair: string) => Promise<ChatAllowance>;
    updateChatAllowance1: (userPair: string, chatAllowance: ChatAllowance) => Promise<ChatAllowance>;
    getChatSummaryByUser1: (userId: number, params?: GetChatSummaryByUser1Params) => Promise<UserChatsSummary>;
    retrieveUserTicket1: () => Promise<ChatTicket>;
    findUserConnections2: (userId: number) => Promise<User[]>;
    findUserContracts1: () => Promise<Contract[]>;
    save2: (contract: Contract) => Promise<Contract>;
    getConversation1: (params?: GetConversation1Params) => Promise<Message[]>;
    sendMessage1: (message: Message) => Promise<Message>;
    getByUserWithResult1: (type: "TO_BROKER__ALERT_CREATED" | "TO_USER__WEEKLY_PROPERTIES" | "TO_USER__WEEKLY_PAYED_SUBSCRIBERS" | "TO_USER__CUSTOMIZED_ALERT" | "TO_USER__WEEKLY_GROUP_PROPERTIES" | "TO_USER__NEWSLETTER_NEW_SUBSCRIBER" | "TO_USER__NEWSLETTER_CONFIRMATION" | "TO_USER__NEWSLETTER_LISTING", autopilotUser: AutopilotUser, params: GetByUserWithResult1Params) => Promise<Notification>;
    retrieveChatUser1: (id: number) => Promise<User>;
    retrieveChatUserStatus1: (id: number) => Promise<RetrieveChatUserStatus1200>;
    get2: () => Promise<CountryPhonePrefix[]>;
    getAllCountries2: () => Promise<Country[]>;
    getCountryByIp1: () => Promise<Country>;
    getCurrencies1: () => Promise<Currency[]>;
    findExchangeRates1: () => Promise<ExchangeRateMap>;
    getGeoLocationsByLatLng1: (params?: GetGeoLocationsByLatLng1Params) => Promise<GeoPlace>;
    getAllLanguages1: () => Promise<Language[]>;
    delete1: (pnemonic: string) => Promise<string>;
    find3: () => Promise<LocaleSet[]>;
    getLanguages1: (params?: GetLanguages1Params) => Promise<GetLanguages1200>;
    translateText1: (params?: TranslateText1Params) => Promise<TextTranslation>;
    triggerKyeroExport1: () => Promise<string>;
    xml1: (userId: string, xmlFormat: string) => Promise<unknown>;
    xmlRedirect1: (userId: string, xmlFormat: string) => Promise<unknown>;
    getFormats1: () => Promise<string[]>;
    uploadKyeroProperties2: (uploadKyeroProperties2Body: string) => Promise<unknown>;
    uploadKyeroPropertiesFromUrl1: (xmlUrl: XmlUrl) => Promise<unknown>;
    uploadProperties1: (format: "kyero" | "wasico" | "xml2u" | "hallocasa", uploadProperties1Body: string) => Promise<unknown>;
    uploadPropertiesFromUrl1: (format: "kyero" | "wasico" | "xml2u" | "hallocasa", xmlUrl: XmlUrl) => Promise<unknown>;
    uploadKyeroProperties: (params: UploadKyeroPropertiesParams) => Promise<FBPropertyDto[]>;
    getGroupMembers1: (groupId: string, params?: GetGroupMembers1Params) => Promise<BaseFilterResult>;
    groupInvite2: (groupId: string) => Promise<GroupMember>;
    groupInvite: (groupId: string, params?: GroupInviteParams) => Promise<GroupMember[]>;
    groupLeave1: (groupId: string) => Promise<GroupMember>;
    groupRequest1: (groupId: string) => Promise<GroupMember>;
    updateGroupMembershipStatus1: (groupId: string, params?: UpdateGroupMembershipStatus1Params) => Promise<GroupMember[]>;
    archiveGroup1: (id: string) => Promise<string>;
    deactivateGroup1: (id: string) => Promise<string>;
    deleteGroup1: (id: string) => Promise<unknown>;
    findArchivedGroupsByUser1: (params?: FindArchivedGroupsByUser1Params) => Promise<BaseFilterResult>;
    findGroup1: (groupId: string) => Promise<Group>;
    findGroupProperties1: (groupId: string) => Promise<Property[]>;
    findGroupPropertiesSearch1: (groupId: string, propertyFilterCriteria: PropertyFilterCriteria) => Promise<BaseFilterResult>;
    findGroupsByUser1: (params?: FindGroupsByUser1Params) => Promise<BaseFilterResult>;
    saveGroup1: (group: Group) => Promise<Group>;
    findInactiveGroupsByUser1: (params?: FindInactiveGroupsByUser1Params) => Promise<BaseFilterResult>;
    findInvitedGroupsByUser1: (params?: FindInvitedGroupsByUser1Params) => Promise<BaseFilterResult>;
    findRequestedGroupsByUser1: (params?: FindRequestedGroupsByUser1Params) => Promise<BaseFilterResult>;
    getPropertyFilters2: (propertyKey: PropertyKey) => Promise<unknown>;
    getPropertyFieldOptions1: (filterId: number, propertyFilterSubmission: PropertyFilterSubmission[]) => Promise<GetPropertyFieldOptions1200>;
    getPropertyFilters: (params?: GetPropertyFiltersParams) => Promise<PropertyFilter[]>;
    getAllCountries: () => Promise<PropertyLocation[]>;
    getAllPropertyProposals1: () => Promise<PropertyProposal[]>;
    changePublicationStatus2: (propertyId: string, changePublicationStatus2Body: ChangePublicationStatus2Body) => Promise<Property>;
    deleteProperty1: (id: string) => Promise<string>;
    fetchRandomProperties2: () => Promise<Property[]>;
    fetchRandomProperties: (propertyId: string) => Promise<Property[]>;
    findProperties1: (propertyFilterCriteria: PropertyFilterCriteria) => Promise<Property[]>;
    findPropertiesByLocationRange1: (range: string) => Promise<unknown>;
    findProperty1: (propertyId: string, params?: FindProperty1Params) => Promise<Property>;
    findPropertyOldUrl1: (id: string) => Promise<unknown>;
    getDraftsProperties1: () => Promise<Property[]>;
    getRecentProperties1: (params?: GetRecentProperties1Params) => Promise<Property[]>;
    getSecuredProperties1: () => Promise<Property[]>;
    previewProperty2: (params: PreviewProperty2Params) => Promise<string>;
    saveProperty1: (property: Property) => Promise<Property>;
    sendAlert2: (weeklyAlertRange: WeeklyAlertRange) => Promise<number>;
    sendGroupAlert1: () => Promise<number>;
    getAllPropertyTypes1: () => Promise<PropertyType[]>;
    changePublicationStatus: (testimonialId: string, publicationState: boolean) => Promise<Testimonial>;
    fetchPublishedTestimonials1: (params?: FetchPublishedTestimonials1Params) => Promise<TestimonialFilterResult>;
    fetchReceivedTestimonials1: (params?: FetchReceivedTestimonials1Params) => Promise<TestimonialFilterResult>;
    saveTestimonial1: (testimonial: Testimonial) => Promise<Testimonial>;
    findTestimonial1: (testimonialId: string) => Promise<Testimonial>;
    findTestimonialRequests1: () => Promise<Testimonial[]>;
    findTestimonialRequestsReceived1: () => Promise<Testimonial[]>;
    findPropertiesByUser1: (id: string, params?: FindPropertiesByUser1Params) => Promise<PropertyFilterResult>;
    findTestimonialsByUser1: (id: string, params?: FindTestimonialsByUser1Params) => Promise<TestimonialFilterResult>;
    requestTestimonialFromUser1: (id: string) => Promise<TestimonialRequest>;
    saveLog1: (logEntry: LogEntry) => Promise<unknown>;
    sendEmail1: () => Promise<unknown>;
    updatePassword1: (passwordRecoveryRequest: PasswordRecoveryRequest) => Promise<unknown>;
    validateToken1: () => Promise<PasswordRecoveryRequest>;
    authorize1: () => Promise<unknown>;
    requestToken1: (requestToken1Body: RequestToken1Body) => Promise<AuthInfoDto>;
    createCheckoutSession2: (checkoutSessionDto: CheckoutSessionDto) => Promise<void>;
    createCheckoutSession: (customerSessionDto: CustomerSessionDto) => Promise<void>;
    postUserSubscriptionChange1: (stripeEvent: StripeEvent) => Promise<unknown>;
    getAll1: (params?: GetAll1Params) => Promise<unknown>;
    get: (userId: number) => Promise<UserSubscriptionDto>;
    getActiveFeatures1: (userId: number) => Promise<SubscriptionPlanFeatureDto[]>;
    deleteAlert1: (userId: number, alertId: number) => Promise<string>;
    getAlertResult1: (userId: number, alertId: number) => Promise<GetAlertResult1200>;
    getByUser2: (userId: number) => Promise<Alert[]>;
    saveAlert1: (userId: number, alert: Alert) => Promise<Alert>;
    newsletterAlerts1: (userId: number) => Promise<NewsletterSubscriberDto[]>;
    newsletterSubscribers1: (userId: number) => Promise<NewsletterSubscriberDto[]>;
    sendAlert: (userId: number) => Promise<string>;
    retrieve1: () => Promise<Brokerage[]>;
    retrieveEndorsementsByUser1: (userId: number, params?: RetrieveEndorsementsByUser1Params) => Promise<SkillEndorsement[]>;
    getByUser: (userId: number, params?: GetByUserParams) => Promise<Favorite[]>;
    postUserFavorite1: (userId: number, favorite: Favorite) => Promise<Favorite>;
    removeUserFavorite1: (userId: number, favoriteId: number) => Promise<unknown>;
    searchGroupUsers1: (groupId: string, userFilterRequest: UserFilterRequest) => Promise<UserFilterResult>;
    retrieveUserSkills2: () => Promise<Skill[]>;
    getUserTypes1: () => Promise<UserType[]>;
    activateUser1: () => Promise<string>;
    checkPhoneVerificationCodeCommand1: (userId: number, phoneCodeCheckResource: PhoneCodeCheckResource) => Promise<PhoneCodeCheckResource>;
    fetchRandomUsers1: (userListRequest: UserListRequest) => Promise<SkilledUser[]>;
    find: (userId: number) => Promise<SkilledUser>;
    find1: (params?: Find1Params) => Promise<SkilledUser[]>;
    save: (skilledUser: SkilledUser) => Promise<string>;
    findList1: (userIds: string) => Promise<SkilledUser[]>;
    findUserConnections: (userId: number) => Promise<SkilledUser[]>;
    getSubscribedUsers1: (subscriptionPlanName: string) => Promise<SubscribedUser[]>;
    previewProperty: (params?: PreviewPropertyParams) => Promise<string>;
    register1: (skilledUser: SkilledUser, params?: Register1Params) => Promise<unknown>;
    requestActivationLink1: (requestActivationLink1Body: RequestActivationLink1Body) => Promise<void>;
    searchUsers1: (userFilterRequest: UserFilterRequest) => Promise<UserFilterResult>;
    sendPayedSusbscribersAlert1: () => Promise<unknown>;
    sendPhoneVerificationCodeCommand1: (userId: number, phoneCodeRequestResource: PhoneCodeRequestResource) => Promise<PhoneCodeRequestResource>;
    retrieveUserSkills: (userId: number) => Promise<UserSkill[]>;
    addUserSkills1: (userId: number, userSkill: UserSkill[]) => Promise<unknown>;
    retrieveSkillEndorsements1: (userId: number, skillId: number) => Promise<SkillEndorsement[]>;
    endorseUserSkill1: (userId: number, skillId: number, skillEndorsement: SkillEndorsement) => Promise<SkillEndorsement>;
};
export type CreateAttachment1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHallocasaAPI>["createAttachment1"]>>>;
export type RetrieveAttachment1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHallocasaAPI>["retrieveAttachment1"]>>>;
export type UpdateAttachment1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHallocasaAPI>["updateAttachment1"]>>>;
export type GetChatAllowance1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHallocasaAPI>["getChatAllowance1"]>>>;
export type UpdateChatAllowance1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHallocasaAPI>["updateChatAllowance1"]>>>;
export type GetChatSummaryByUser1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHallocasaAPI>["getChatSummaryByUser1"]>>>;
export type RetrieveUserTicket1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHallocasaAPI>["retrieveUserTicket1"]>>>;
export type FindUserConnections2Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHallocasaAPI>["findUserConnections2"]>>>;
export type FindUserContracts1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHallocasaAPI>["findUserContracts1"]>>>;
export type Save2Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHallocasaAPI>["save2"]>>>;
export type GetConversation1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHallocasaAPI>["getConversation1"]>>>;
export type SendMessage1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHallocasaAPI>["sendMessage1"]>>>;
export type GetByUserWithResult1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHallocasaAPI>["getByUserWithResult1"]>>>;
export type RetrieveChatUser1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHallocasaAPI>["retrieveChatUser1"]>>>;
export type RetrieveChatUserStatus1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHallocasaAPI>["retrieveChatUserStatus1"]>>>;
export type Get2Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHallocasaAPI>["get2"]>>>;
export type GetAllCountries2Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHallocasaAPI>["getAllCountries2"]>>>;
export type GetCountryByIp1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHallocasaAPI>["getCountryByIp1"]>>>;
export type GetCurrencies1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHallocasaAPI>["getCurrencies1"]>>>;
export type FindExchangeRates1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHallocasaAPI>["findExchangeRates1"]>>>;
export type GetGeoLocationsByLatLng1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHallocasaAPI>["getGeoLocationsByLatLng1"]>>>;
export type GetAllLanguages1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHallocasaAPI>["getAllLanguages1"]>>>;
export type Delete1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHallocasaAPI>["delete1"]>>>;
export type Find3Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHallocasaAPI>["find3"]>>>;
export type GetLanguages1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHallocasaAPI>["getLanguages1"]>>>;
export type TranslateText1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHallocasaAPI>["translateText1"]>>>;
export type TriggerKyeroExport1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHallocasaAPI>["triggerKyeroExport1"]>>>;
export type Xml1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHallocasaAPI>["xml1"]>>>;
export type XmlRedirect1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHallocasaAPI>["xmlRedirect1"]>>>;
export type GetFormats1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHallocasaAPI>["getFormats1"]>>>;
export type UploadKyeroProperties2Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHallocasaAPI>["uploadKyeroProperties2"]>>>;
export type UploadKyeroPropertiesFromUrl1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHallocasaAPI>["uploadKyeroPropertiesFromUrl1"]>>>;
export type UploadProperties1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHallocasaAPI>["uploadProperties1"]>>>;
export type UploadPropertiesFromUrl1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHallocasaAPI>["uploadPropertiesFromUrl1"]>>>;
export type UploadKyeroPropertiesResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getHallocasaAPI>["uploadKyeroProperties"]>>>;
export type GetGroupMembers1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHallocasaAPI>["getGroupMembers1"]>>>;
export type GroupInvite2Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHallocasaAPI>["groupInvite2"]>>>;
export type GroupInviteResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getHallocasaAPI>["groupInvite"]>>>;
export type GroupLeave1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHallocasaAPI>["groupLeave1"]>>>;
export type GroupRequest1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHallocasaAPI>["groupRequest1"]>>>;
export type UpdateGroupMembershipStatus1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHallocasaAPI>["updateGroupMembershipStatus1"]>>>;
export type ArchiveGroup1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHallocasaAPI>["archiveGroup1"]>>>;
export type DeactivateGroup1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHallocasaAPI>["deactivateGroup1"]>>>;
export type DeleteGroup1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHallocasaAPI>["deleteGroup1"]>>>;
export type FindArchivedGroupsByUser1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHallocasaAPI>["findArchivedGroupsByUser1"]>>>;
export type FindGroup1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHallocasaAPI>["findGroup1"]>>>;
export type FindGroupProperties1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHallocasaAPI>["findGroupProperties1"]>>>;
export type FindGroupPropertiesSearch1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHallocasaAPI>["findGroupPropertiesSearch1"]>>>;
export type FindGroupsByUser1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHallocasaAPI>["findGroupsByUser1"]>>>;
export type SaveGroup1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHallocasaAPI>["saveGroup1"]>>>;
export type FindInactiveGroupsByUser1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHallocasaAPI>["findInactiveGroupsByUser1"]>>>;
export type FindInvitedGroupsByUser1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHallocasaAPI>["findInvitedGroupsByUser1"]>>>;
export type FindRequestedGroupsByUser1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHallocasaAPI>["findRequestedGroupsByUser1"]>>>;
export type GetPropertyFilters2Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHallocasaAPI>["getPropertyFilters2"]>>>;
export type GetPropertyFieldOptions1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHallocasaAPI>["getPropertyFieldOptions1"]>>>;
export type GetPropertyFiltersResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getHallocasaAPI>["getPropertyFilters"]>>>;
export type GetAllCountriesResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getHallocasaAPI>["getAllCountries"]>>>;
export type GetAllPropertyProposals1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHallocasaAPI>["getAllPropertyProposals1"]>>>;
export type ChangePublicationStatus2Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHallocasaAPI>["changePublicationStatus2"]>>>;
export type DeleteProperty1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHallocasaAPI>["deleteProperty1"]>>>;
export type FetchRandomProperties2Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHallocasaAPI>["fetchRandomProperties2"]>>>;
export type FetchRandomPropertiesResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getHallocasaAPI>["fetchRandomProperties"]>>>;
export type FindProperties1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHallocasaAPI>["findProperties1"]>>>;
export type FindPropertiesByLocationRange1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHallocasaAPI>["findPropertiesByLocationRange1"]>>>;
export type FindProperty1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHallocasaAPI>["findProperty1"]>>>;
export type FindPropertyOldUrl1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHallocasaAPI>["findPropertyOldUrl1"]>>>;
export type GetDraftsProperties1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHallocasaAPI>["getDraftsProperties1"]>>>;
export type GetRecentProperties1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHallocasaAPI>["getRecentProperties1"]>>>;
export type GetSecuredProperties1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHallocasaAPI>["getSecuredProperties1"]>>>;
export type PreviewProperty2Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHallocasaAPI>["previewProperty2"]>>>;
export type SaveProperty1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHallocasaAPI>["saveProperty1"]>>>;
export type SendAlert2Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHallocasaAPI>["sendAlert2"]>>>;
export type SendGroupAlert1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHallocasaAPI>["sendGroupAlert1"]>>>;
export type GetAllPropertyTypes1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHallocasaAPI>["getAllPropertyTypes1"]>>>;
export type ChangePublicationStatusResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getHallocasaAPI>["changePublicationStatus"]>>>;
export type FetchPublishedTestimonials1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHallocasaAPI>["fetchPublishedTestimonials1"]>>>;
export type FetchReceivedTestimonials1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHallocasaAPI>["fetchReceivedTestimonials1"]>>>;
export type SaveTestimonial1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHallocasaAPI>["saveTestimonial1"]>>>;
export type FindTestimonial1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHallocasaAPI>["findTestimonial1"]>>>;
export type FindTestimonialRequests1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHallocasaAPI>["findTestimonialRequests1"]>>>;
export type FindTestimonialRequestsReceived1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHallocasaAPI>["findTestimonialRequestsReceived1"]>>>;
export type FindPropertiesByUser1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHallocasaAPI>["findPropertiesByUser1"]>>>;
export type FindTestimonialsByUser1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHallocasaAPI>["findTestimonialsByUser1"]>>>;
export type RequestTestimonialFromUser1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHallocasaAPI>["requestTestimonialFromUser1"]>>>;
export type SaveLog1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHallocasaAPI>["saveLog1"]>>>;
export type SendEmail1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHallocasaAPI>["sendEmail1"]>>>;
export type UpdatePassword1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHallocasaAPI>["updatePassword1"]>>>;
export type ValidateToken1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHallocasaAPI>["validateToken1"]>>>;
export type Authorize1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHallocasaAPI>["authorize1"]>>>;
export type RequestToken1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHallocasaAPI>["requestToken1"]>>>;
export type CreateCheckoutSession2Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHallocasaAPI>["createCheckoutSession2"]>>>;
export type CreateCheckoutSessionResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getHallocasaAPI>["createCheckoutSession"]>>>;
export type PostUserSubscriptionChange1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHallocasaAPI>["postUserSubscriptionChange1"]>>>;
export type GetAll1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHallocasaAPI>["getAll1"]>>>;
export type GetResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getHallocasaAPI>["get"]>>>;
export type GetActiveFeatures1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHallocasaAPI>["getActiveFeatures1"]>>>;
export type DeleteAlert1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHallocasaAPI>["deleteAlert1"]>>>;
export type GetAlertResult1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHallocasaAPI>["getAlertResult1"]>>>;
export type GetByUser2Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHallocasaAPI>["getByUser2"]>>>;
export type SaveAlert1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHallocasaAPI>["saveAlert1"]>>>;
export type NewsletterAlerts1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHallocasaAPI>["newsletterAlerts1"]>>>;
export type NewsletterSubscribers1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHallocasaAPI>["newsletterSubscribers1"]>>>;
export type SendAlertResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getHallocasaAPI>["sendAlert"]>>>;
export type Retrieve1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHallocasaAPI>["retrieve1"]>>>;
export type RetrieveEndorsementsByUser1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHallocasaAPI>["retrieveEndorsementsByUser1"]>>>;
export type GetByUserResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getHallocasaAPI>["getByUser"]>>>;
export type PostUserFavorite1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHallocasaAPI>["postUserFavorite1"]>>>;
export type RemoveUserFavorite1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHallocasaAPI>["removeUserFavorite1"]>>>;
export type SearchGroupUsers1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHallocasaAPI>["searchGroupUsers1"]>>>;
export type RetrieveUserSkills2Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHallocasaAPI>["retrieveUserSkills2"]>>>;
export type GetUserTypes1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHallocasaAPI>["getUserTypes1"]>>>;
export type ActivateUser1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHallocasaAPI>["activateUser1"]>>>;
export type CheckPhoneVerificationCodeCommand1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHallocasaAPI>["checkPhoneVerificationCodeCommand1"]>>>;
export type FetchRandomUsers1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHallocasaAPI>["fetchRandomUsers1"]>>>;
export type FindResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getHallocasaAPI>["find"]>>>;
export type Find1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHallocasaAPI>["find1"]>>>;
export type SaveResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getHallocasaAPI>["save"]>>>;
export type FindList1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHallocasaAPI>["findList1"]>>>;
export type FindUserConnectionsResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getHallocasaAPI>["findUserConnections"]>>>;
export type GetSubscribedUsers1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHallocasaAPI>["getSubscribedUsers1"]>>>;
export type PreviewPropertyResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getHallocasaAPI>["previewProperty"]>>>;
export type Register1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHallocasaAPI>["register1"]>>>;
export type RequestActivationLink1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHallocasaAPI>["requestActivationLink1"]>>>;
export type SearchUsers1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHallocasaAPI>["searchUsers1"]>>>;
export type SendPayedSusbscribersAlert1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHallocasaAPI>["sendPayedSusbscribersAlert1"]>>>;
export type SendPhoneVerificationCodeCommand1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHallocasaAPI>["sendPhoneVerificationCodeCommand1"]>>>;
export type RetrieveUserSkillsResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getHallocasaAPI>["retrieveUserSkills"]>>>;
export type AddUserSkills1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHallocasaAPI>["addUserSkills1"]>>>;
export type RetrieveSkillEndorsements1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHallocasaAPI>["retrieveSkillEndorsements1"]>>>;
export type EndorseUserSkill1Result = NonNullable<Awaited<ReturnType<ReturnType<typeof getHallocasaAPI>["endorseUserSkill1"]>>>;
